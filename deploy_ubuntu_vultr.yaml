---
# Play 1: Provision the Vultr Server using Vultr API
- name: Provision Vultr Ubuntu Server
  hosts: localhost
  connection: local
  gather_facts: false # Not needed for API interaction

  vars:
    # --- Vultr API & Server Configuration ---
    # ** SECURITY WARNING: Store your API key securely! **
    vultr_api_key: "{{ lookup('env', 'VULTR_API_KEY') }}"

    server_label: "my-ubuntu-ldapserver" # Unique label
    server_hostname: "ldapserver.still-learning.tech" # Optional: sets the server hostname
    vultr_region: "ewr" # Example: Newark. Find IDs via Vultr docs/API/CLI
    vultr_plan: "vc2-2c-2gb" # Example: 1 CPU, 1GB RAM. Find IDs via Vultr docs/API/CLI
    vultr_os_name: "Ubuntu 24.10 x64" # Use the OS name as shown in Vultr UI/API
    # Name of the SSH key *already added* to your Vultr account
    vultr_ssh_key_name: "Fedora personal"
    # Optional: Assign Firewall Group ID (must exist in Vultr)
    # vultr_firewall_group_id: "your_firewall_group_id"
    # Optional: Assign Tags
    # vultr_tags:
    #   - webserver
    #   - production

    # --- SSH Configuration for Ansible ---
    # Path to the *private* key corresponding to the public key added to Vultr
    # ** SECURITY WARNING: Secure this path if needed (e.g., Vault) **
    ssh_private_key_file: "~/.ssh/id_ed25519" # Adjust path as needed
    new_server_user: "root" # Initial connection usually as root for Vultr Ubuntu

  tasks:
    - name: Fail if Vultr API Key is not set
      ansible.builtin.fail:
        msg: "Vultr API Key is not defined. Set the VULTR_API_KEY environment variable or define 'vultr_api_key' in vars."
      when: vultr_api_key is not defined or vultr_api_key == ""

    - name: Find the OS ID for '{{ vultr_os_name }}'
      vultr.cloud.os_info:
        api_key: "{{ vultr_api_key }}"
      register: os_info_result
      delegate_to: localhost # Ensure this runs locally
      # Note: The 'vultr.cloud.os_info' module fetches all OS info, including IDs.
      # You can filter the results based on the OS name you want to use.

    - name: Find the SSH Key ID for '{{ vultr_ssh_key_name }}'
      vultr.cloud.ssh_key_info:
        api_key: "{{ vultr_api_key }}"
      register: ssh_key_info_result
      delegate_to: localhost

    - name: Print vultr_ssh_key_name
      ansible.builtin.debug:
        var: (ssh_key_info_result.vultr_ssh_key_info | selectattr('name', 'equalto', vultr_ssh_key_name) | list | first).name

    - name: Create Vultr Server Instance
      vultr.cloud.instance:
        activation_email: true # Optional: Send activation email
        api_key: "{{ vultr_api_key }}"
        label: "{{ server_label }}"
        hostname: "{{ server_hostname | default(omit) }}" # Only set if defined
        region: "{{ vultr_region }}"
        plan: "{{ vultr_plan }}"
        os: "{{ vultr_os_name }}"
        ssh_keys:
          - "{{ vultr_ssh_key_name }}" # Must be a list
        # firewall_group_id: "{{ vultr_firewall_group_id | default(omit) }}" # Only set if defined
        # tags: "{{ vultr_tags | default(omit) }}" # Only set if defined
        state: present # Ensure the server exists
      when: instance_id is undefined # Only create if not already defined

    - name: Get Vultr instance info of the single host
      vultr.cloud.instance_info:
        label: "{{ server_label }}"
      register: results

    - name: Print Vultr instance info
      ansible.builtin.debug:
        var: (results.vultr_instance_info | selectattr('label', 'equalto', server_label) | list | first).main_ip

    # --- Dynamic Inventory ---
    - name: Add new server IP to inventory group 'vultr_servers'
      ansible.builtin.copy:
        content: |
          [vultr_servers]
          {{ (results.vultr_instance_info | selectattr('label', 'equalto', server_label) | list | first).main_ip }}
        dest: "inventory/hosts"
        mode: "0644"

    # Write instance id to vars file
    - name: Write instance id to vars file
      ansible.builtin.copy:
        content: |
          instance_id: "{{ (results.vultr_instance_info | selectattr('label', 'equalto', server_label) | list | first).id }}"
        dest: "vars/instance_id.yml"
        mode: "0644"
